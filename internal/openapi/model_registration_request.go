/*
Orchestra API

Микросервис API для \"Клуба друзей оркестра\". **Все пользователи считаются равными**, а доступ из внешнего мира осуществляется через Telegram-бот.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the RegistrationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegistrationRequest{}

// RegistrationRequest struct for RegistrationRequest
type RegistrationRequest struct {
	MemberId string `json:"memberId"`
}

type _RegistrationRequest RegistrationRequest

// NewRegistrationRequest instantiates a new RegistrationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegistrationRequest(memberId string) *RegistrationRequest {
	this := RegistrationRequest{}
	this.MemberId = memberId
	return &this
}

// NewRegistrationRequestWithDefaults instantiates a new RegistrationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegistrationRequestWithDefaults() *RegistrationRequest {
	this := RegistrationRequest{}
	return &this
}

// GetMemberId returns the MemberId field value
func (o *RegistrationRequest) GetMemberId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MemberId
}

// GetMemberIdOk returns a tuple with the MemberId field value
// and a boolean to check if the value has been set.
func (o *RegistrationRequest) GetMemberIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberId, true
}

// SetMemberId sets field value
func (o *RegistrationRequest) SetMemberId(v string) {
	o.MemberId = v
}

func (o RegistrationRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegistrationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["memberId"] = o.MemberId
	return toSerialize, nil
}

func (o *RegistrationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"memberId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varRegistrationRequest := _RegistrationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varRegistrationRequest)

	if err != nil {
		return err
	}

	*o = RegistrationRequest(varRegistrationRequest)

	return err
}

type NullableRegistrationRequest struct {
	value *RegistrationRequest
	isSet bool
}

func (v NullableRegistrationRequest) Get() *RegistrationRequest {
	return v.value
}

func (v *NullableRegistrationRequest) Set(val *RegistrationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableRegistrationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableRegistrationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegistrationRequest(val *RegistrationRequest) *NullableRegistrationRequest {
	return &NullableRegistrationRequest{value: val, isSet: true}
}

func (v NullableRegistrationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegistrationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
